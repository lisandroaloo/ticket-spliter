generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  us_email     String             @id
  us_nombre    String
  us_password  String
  us_estado    String
  PagoPago_us_emisor_id   Pago[]  @relation("PagoPago_us_emisor_id")
  PagoPago_us_receptor_id Pago[]  @relation("PagoPago_us_receptor_id")
  UsuarioXProyecto UsuarioXProyecto[]
  UsuarioXTicket UsuarioXTicket[] // Relación con los tickets
  Ticket       Ticket[]

  @@map("Usuario")
}

model Pago {
  pa_id           Int      @id @default(autoincrement())
  pa_us_emisor_id String
  pa_us_receptor_id String
  pa_monto        Float
  pa_fecha        DateTime
  pa_pr_id        Int
  pa_isEnviado    Boolean  @default(false)
  pa_isRecibido   Boolean  @default(false)

  // Relaciones
  Emisor          Usuario  @relation("PagoPago_us_emisor_id", fields: [pa_us_emisor_id], references: [us_email])
  Receptor        Usuario  @relation("PagoPago_us_receptor_id", fields: [pa_us_receptor_id], references: [us_email])
  Proyecto        Proyecto @relation(fields: [pa_pr_id], references: [pr_id])

  @@map("Pago")
}


model Proyecto {
  pr_id           Int              @id @default(autoincrement())
  pr_nombre       String
  pr_descripcion  String?
  UsuarioXProyecto UsuarioXProyecto[]
  pr_abierto   Boolean          @default(true)
  Ticket          Ticket[]
  Pago Pago[]

  @@map("Proyecto")
}

model UsuarioXProyecto {
  uxp_us_id       String
  uxp_pr_id       Int
  Usuario         Usuario   @relation(fields: [uxp_us_id], references: [us_email])
  Proyecto        Proyecto  @relation(fields: [uxp_pr_id], references: [pr_id])

  @@id([uxp_us_id, uxp_pr_id])
  @@map("UsuarioXProyecto")
}

model Ticket {
  ti_id           Int      @id @default(autoincrement())
  ti_pr_id        Int
  ti_us_id        String
  ti_monto        Float
  ti_descripcion  String
  ti_image_url    String
  ti_fecha        DateTime
  Proyecto        Proyecto  @relation(fields: [ti_pr_id], references: [pr_id])
  Usuario         Usuario   @relation(fields: [ti_us_id], references: [us_email])
  UsuarioXTicket  UsuarioXTicket[] // Relación con usuarios y porcentajes

  @@map("Ticket")
}

model UsuarioXTicket {
  uxt_us_id       String
  uxt_ti_id       Int
  uxt_porcentaje  Float
  Usuario         Usuario @relation(fields: [uxt_us_id], references: [us_email])
  Ticket          Ticket  @relation(fields: [uxt_ti_id], references: [ti_id])

  @@id([uxt_us_id, uxt_ti_id]) // Clave compuesta
  @@map("UsuarioXTicket") // Nombre real de la tabla
}
